using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using System.Threading.Tasks;
using System.Xml.Linq;
using System.Xml.Serialization;
using EficazFramework.SPED.Utilities.XML;
using Microsoft.VisualBasic.CompilerServices;

// 
// This source code was auto-generated by xsd, Version=4.6.1055.0.
// 
namespace EficazFramework.SPED.Schemas.SAT_CFe;

/* TODO ERROR: Skipped RegionDirectiveTrivia */
/// <summary>
/// Classe de Envio de lote de CF-e'ss
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
[XmlRoot("envCFe", Namespace = "", IsNullable = false)]
public partial class envCFe : object, INotifyPropertyChanged, IXmlSpedDocument
{
    private string tpAmbField;
    private string idLoteField;
    private string cUFField;
    private CFe[] loteCFeField;
    private string nSegField;
    private string dhEnvioField;
    private string nserieSATField;
    private string versaoField;
    private static XmlSerializer sSerializer;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public string tpAmb
    {
        get
        {
            return tpAmbField;
        }

        set
        {
            tpAmbField = value;
            RaisePropertyChanged("tpAmb");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    public string idLote
    {
        get
        {
            return idLoteField;
        }

        set
        {
            idLoteField = value;
            RaisePropertyChanged("idLote");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 2)]
    public string cUF
    {
        get
        {
            return cUFField;
        }

        set
        {
            cUFField = value;
            RaisePropertyChanged("cUF");
        }
    }

    /// <remarks/>
    [XmlArray(Order = 3)]
    [XmlArrayItem("CFe", IsNullable = false)]
    public CFe[] LoteCFe
    {
        get
        {
            return loteCFeField;
        }

        set
        {
            loteCFeField = value;
            RaisePropertyChanged("LoteCFe");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 4)]
    public string nSeg
    {
        get
        {
            return nSegField;
        }

        set
        {
            nSegField = value;
            RaisePropertyChanged("nSeg");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 5)]
    public string dhEnvio
    {
        get
        {
            return dhEnvioField;
        }

        set
        {
            dhEnvioField = value;
            RaisePropertyChanged("dhEnvio");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 6)]
    public string nserieSAT
    {
        get
        {
            return nserieSATField;
        }

        set
        {
            nserieSATField = value;
            RaisePropertyChanged("nserieSAT");
        }
    }

    /// <remarks/>
    [XmlAttribute()]
    public string versao
    {
        get
        {
            return versaoField;
        }

        set
        {
            versaoField = value;
            RaisePropertyChanged("versao");
        }
    }

    public XmlDocumentType DocumentType
    {
        get
        {
            return XmlDocumentType.SAT_CFe_Lote;
        }
    }

    public DateTime? DataEmissao
    {
        get
        {
            var f = LoteCFe.FirstOrDefault();
            return f?.infCFe.ide.Emissao;
        }
    }

    public string Chave
    {
        get
        {
            var f = LoteCFe.FirstOrDefault();
            if (string.IsNullOrEmpty(f.infCFe.Id))
                return null;
            return f.infCFe.Id.ToLower().Replace("cfe", "");
        }
    }

    private static XmlSerializer Serializer
    {
        get
        {
            if (sSerializer is null)
            {
                sSerializer = new XmlSerializer(typeof(envCFe));
            }

            return sSerializer;
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /* TODO ERROR: Skipped RegionDirectiveTrivia */
    /// <summary>
    /// Serializes current TNfeProc object into an XML document
    /// </summary>
    /// <returns>string XML value</returns>
    public virtual string Serialize()
    {
        System.IO.StreamReader streamReader = null;
        System.IO.MemoryStream memoryStream = null;
        try
        {
            memoryStream = new System.IO.MemoryStream();
            Serializer.Serialize(memoryStream, this);
            memoryStream.Seek(0L, System.IO.SeekOrigin.Begin);
            streamReader = new System.IO.StreamReader(memoryStream);
            return streamReader.ReadToEnd();
        }
        finally
        {
            if (streamReader != null)
            {
                streamReader.Dispose();
            }

            if (memoryStream != null)
            {
                memoryStream.Dispose();
            }
        }
    }

    /// <summary>
    /// Deserializes workflow markup into an TNfeProc object
    /// </summary>
    /// <param name="xml">string workflow markup to deserialize</param>
    /// <param name="obj">Output TNfeProc object</param>
    /// <param name="exception">output Exception value if deserialize failed</param>
    /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
    public static bool CanDeserialize(string xml, ref envCFe obj, ref Exception exception)
    {
        exception = null;
        obj = default;
        try
        {
            obj = Deserialize(xml);
            return true;
        }
        catch (Exception ex)
        {
            exception = ex;
            return false;
        }
    }

    public static bool CanDeserialize(string xml, ref envCFe obj)
    {
        Exception exception = null;
        return CanDeserialize(xml, ref obj, ref exception);
    }

    public static envCFe Deserialize(string xml)
    {
        System.IO.StringReader stringReader = null;
        try
        {
            string result = xml.Replace("ns1:", string.Empty).Replace("ns2:", string.Empty).Replace("ns3:", string.Empty).Replace("ns4:", string.Empty).Replace(":ns1", string.Empty).Replace(":ns2", string.Empty).Replace(":ns3", string.Empty).Replace(":ns4", string.Empty).Replace("xmlns=\"http://www.w3.org/2000/09/xmldsig#\"", string.Empty);
            stringReader = new System.IO.StringReader(result);
            // stringReader.ReadToEnd() 'TESTING...
            return (envCFe)Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader));
        }
        // Return CType(Serializer.Deserialize(stringReader), envCFe)
        finally
        {
            if (stringReader != null)
            {
                stringReader.Dispose();
            }
        }
    }

    public static envCFe Deserialize(System.IO.Stream s)
    {
        return (envCFe)Serializer.Deserialize(s);
    }


    /// <summary>
    /// Serializes current TNfeProc object into file
    /// </summary>
    /// <param name="target">target stream of outupt xml file</param>
    /// <param name="exception">output Exception value if failed</param>
    /// <returns>true if can serialize and save into file; otherwise, false</returns>
    public virtual bool CanSaveToFile(System.IO.Stream target, ref Exception exception)
    {
        exception = null;
        try
        {
            SaveTo(target);
            return true;
        }
        catch (Exception e)
        {
            exception = e;
            return false;
        }
    }

    public virtual void SaveTo(System.IO.Stream target)
    {
        if (target is null)
            throw new ArgumentException(Resources.Strings.Validation.Classes_Save_NullStreamExceptionMessage);
        var streamWriter = new System.IO.StreamWriter(target);
        try
        {
            string xmlString = Serialize();
            // Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
            // streamWriter = xmlFile.CreateText
            streamWriter.WriteLine(xmlString);
            streamWriter.Flush();
        }
        finally
        {
            if (streamWriter != null)
            {
                streamWriter.Dispose();
            }
        }
    }

    public virtual async void SaveToAsync(System.IO.Stream target)
    {
        if (target is null)
            throw new ArgumentException(Resources.Strings.Validation.Classes_Save_NullStreamExceptionMessage);
        var streamWriter = new System.IO.StreamWriter(target);
        try
        {
            string xmlString = Serialize();
            await streamWriter.WriteLineAsync(xmlString);
            await streamWriter.FlushAsync();
        }
        finally
        {
            if (streamWriter != null)
            {
                streamWriter.Dispose();
            }
        }
    }


    /// <summary>
    /// Deserializes xml markup from file into an TNfeProc object
    /// </summary>
    /// <param name="source">target stream of outupt xml file</param>
    /// <param name="obj">Output TNfeProc object</param>
    /// <param name="exception">output Exception value if deserialize failed</param>
    /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
    public static bool CanLoadFrom(System.IO.Stream source, ref envCFe obj, ref Exception exception)
    {
        exception = null;
        obj = default;
        try
        {
            obj = LoadFrom(source);
            return true;
        }
        catch (Exception ex)
        {
            exception = ex;
            return false;
        }
    }

    public static bool CanLoadFrom(System.IO.Stream source, ref envCFe obj)
    {
        Exception exception = null;
        return CanLoadFrom(source, ref obj, ref exception);
    }

    public static envCFe LoadFrom(System.IO.Stream source)
    {
        if (source is null)
            throw new ArgumentException(Resources.Strings.Validation.Classes_Load_NullStreamExceptionMessage);
        System.IO.StreamReader sr = null;
        try
        {
            // file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
            sr = new System.IO.StreamReader(source);
            string xmlString = sr.ReadToEnd();
            // sr.Close()
            // file.Close()
            return Deserialize(xmlString);
        }
        finally
        {
            if (source != null)
            {
                source.Dispose();
            }

            if (sr != null)
            {
                sr.Dispose();
            }
        }
    }

    public static async Task<envCFe> LoadFromAsync(System.IO.Stream source, bool close_stream = true)
    {
        if (source is null)
            throw new ArgumentException(Resources.Strings.Validation.Classes_Load_NullStreamExceptionMessage);
        System.IO.StreamReader sr = null;
        try
        {
            // file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
            sr = new System.IO.StreamReader(source);
            string xmlString = await sr.ReadToEndAsync();
            // sr.Close()
            // file.Close()
            return Deserialize(xmlString);
        }
        finally
        {
            if (sr != null & close_stream == true)
            {
                sr.Dispose();
            }
        }
    }

    /* TODO ERROR: Skipped EndRegionDirectiveTrivia */
}

/* TODO ERROR: Skipped EndRegionDirectiveTrivia */
/* TODO ERROR: Skipped RegionDirectiveTrivia */
/// <summary>
/// Classe Principal contendo lote de CF-e's cancelados
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
[XmlRoot("cancCFe", Namespace = "", IsNullable = false)]
public partial class CancelamentoCFe : object, INotifyPropertyChanged, IXmlSpedDocument
{
    private string tpAmbField;
    private string idLoteField;
    private CFeCancelado[] loteCFeCancField;
    private string cUFField;
    private string nSegField;
    private string dhEnvioField;
    private string nserieSATField;
    private string versaoField;
    private static XmlSerializer sSerializer;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public string tpAmb
    {
        get
        {
            return tpAmbField;
        }

        set
        {
            tpAmbField = value;
            RaisePropertyChanged("tpAmb");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    public string idLote
    {
        get
        {
            return idLoteField;
        }

        set
        {
            idLoteField = value;
            RaisePropertyChanged("idLote");
        }
    }

    /// <remarks/>
    [XmlArray(Order = 2)]
    [XmlArrayItem("CFeCanc", IsNullable = false)]
    public CFeCancelado[] LoteCFeCanc
    {
        get
        {
            return loteCFeCancField;
        }

        set
        {
            loteCFeCancField = value;
            RaisePropertyChanged("LoteCFeCanc");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 3)]
    public string cUF
    {
        get
        {
            return cUFField;
        }

        set
        {
            cUFField = value;
            RaisePropertyChanged("cUF");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 4)]
    public string nSeg
    {
        get
        {
            return nSegField;
        }

        set
        {
            nSegField = value;
            RaisePropertyChanged("nSeg");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 5)]
    public string dhEnvio
    {
        get
        {
            return dhEnvioField;
        }

        set
        {
            dhEnvioField = value;
            RaisePropertyChanged("dhEnvio");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 6)]
    public string nserieSAT
    {
        get
        {
            return nserieSATField;
        }

        set
        {
            nserieSATField = value;
            RaisePropertyChanged("nserieSAT");
        }
    }

    /// <remarks/>
    [XmlAttribute()]
    public string versao
    {
        get
        {
            return versaoField;
        }

        set
        {
            versaoField = value;
            RaisePropertyChanged("versao");
        }
    }

    public XmlDocumentType DocumentType
    {
        get
        {
            return XmlDocumentType.SAT_CFe_Cancelamento;
        }
    }

    public DateTime? DataEmissao
    {
        get
        {
            if (string.IsNullOrEmpty(dhEnvio) | string.IsNullOrWhiteSpace(dhEnvio))
                return default;
            int d, m, y;
            int h, MM, s;
            d = Conversions.ToInteger(dhEnvio.Substring(6, 2));
            m = Conversions.ToInteger(dhEnvio.Substring(4, 2));
            y = Conversions.ToInteger(dhEnvio.Substring(0, 4));
            h = Conversions.ToInteger(dhEnvio.Substring(8, 2));
            MM = Conversions.ToInteger(dhEnvio.Substring(10, 2));
            s = Conversions.ToInteger(dhEnvio.Substring(12, 2));
            return new DateTime(y, m, d, h, MM, s);
        }
    }

    public string Chave
    {
        get
        {
            var f = LoteCFeCanc.FirstOrDefault();
            if (string.IsNullOrEmpty(f.infCFe.Id))
                return null;
            return f.infCFe.Id.ToLower().Replace("cfe", "");
        }
    }

    private static XmlSerializer Serializer
    {
        get
        {
            if (sSerializer is null)
            {
                sSerializer = new XmlSerializer(typeof(CancelamentoCFe));
            }

            return sSerializer;
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /* TODO ERROR: Skipped RegionDirectiveTrivia */
    /// <summary>
    /// Serializes current TNfeProc object into an XML document
    /// </summary>
    /// <returns>string XML value</returns>
    public virtual string Serialize()
    {
        System.IO.StreamReader streamReader = null;
        System.IO.MemoryStream memoryStream = null;
        try
        {
            memoryStream = new System.IO.MemoryStream();
            Serializer.Serialize(memoryStream, this);
            memoryStream.Seek(0L, System.IO.SeekOrigin.Begin);
            streamReader = new System.IO.StreamReader(memoryStream);
            return streamReader.ReadToEnd();
        }
        finally
        {
            if (streamReader != null)
            {
                streamReader.Dispose();
            }

            if (memoryStream != null)
            {
                memoryStream.Dispose();
            }
        }
    }

    /// <summary>
    /// Deserializes workflow markup into an TNfeProc object
    /// </summary>
    /// <param name="xml">string workflow markup to deserialize</param>
    /// <param name="obj">Output TNfeProc object</param>
    /// <param name="exception">output Exception value if deserialize failed</param>
    /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
    public static bool CanDeserialize(string xml, ref CancelamentoCFe obj, ref Exception exception)
    {
        exception = null;
        obj = default;
        try
        {
            obj = Deserialize(xml);
            return true;
        }
        catch (Exception ex)
        {
            exception = ex;
            return false;
        }
    }

    public static bool CanDeserialize(string xml, ref CancelamentoCFe obj)
    {
        Exception exception = null;
        return CanDeserialize(xml, ref obj, ref exception);
    }

    public static CancelamentoCFe Deserialize(string xml)
    {
        System.IO.StringReader stringReader = null;
        try
        {
            string result = xml.Replace("ns1:", string.Empty).Replace("ns2:", string.Empty).Replace("ns3:", string.Empty).Replace("ns4:", string.Empty).Replace(":ns1", string.Empty).Replace(":ns2", string.Empty).Replace(":ns3", string.Empty).Replace(":ns4", string.Empty).Replace("xmlns=\"http://www.w3.org/2000/09/xmldsig#\"", string.Empty);
            stringReader = new System.IO.StringReader(result);
            // stringReader.ReadToEnd() 'TESTING...
            return (CancelamentoCFe)Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader));
        }
        // Return CType(Serializer.Deserialize(stringReader), CancelamentoCFe)
        finally
        {
            if (stringReader != null)
            {
                stringReader.Dispose();
            }
        }
    }

    public static CancelamentoCFe Deserialize(System.IO.Stream s)
    {
        return (CancelamentoCFe)Serializer.Deserialize(s);
    }


    /// <summary>
    /// Serializes current TNfeProc object into file
    /// </summary>
    /// <param name="target">target stream of outupt xml file</param>
    /// <param name="exception">output Exception value if failed</param>
    /// <returns>true if can serialize and save into file; otherwise, false</returns>
    public virtual bool CanSaveToFile(System.IO.Stream target, ref Exception exception)
    {
        exception = null;
        try
        {
            SaveTo(target);
            return true;
        }
        catch (Exception e)
        {
            exception = e;
            return false;
        }
    }

    public virtual void SaveTo(System.IO.Stream target)
    {
        if (target is null)
            throw new ArgumentException(Resources.Strings.Validation.Classes_Save_NullStreamExceptionMessage);
        var streamWriter = new System.IO.StreamWriter(target);
        try
        {
            string xmlString = Serialize();
            // Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
            // streamWriter = xmlFile.CreateText
            streamWriter.WriteLine(xmlString);
            streamWriter.Flush();
        }
        finally
        {
            if (streamWriter != null)
            {
                streamWriter.Dispose();
            }
        }
    }

    public virtual async void SaveToAsync(System.IO.Stream target)
    {
        if (target is null)
            throw new ArgumentException(Resources.Strings.Validation.Classes_Save_NullStreamExceptionMessage);
        var streamWriter = new System.IO.StreamWriter(target);
        try
        {
            string xmlString = Serialize();
            await streamWriter.WriteLineAsync(xmlString);
            await streamWriter.FlushAsync();
        }
        finally
        {
            if (streamWriter != null)
            {
                streamWriter.Dispose();
            }
        }
    }


    /// <summary>
    /// Deserializes xml markup from file into an TNfeProc object
    /// </summary>
    /// <param name="source">target stream of outupt xml file</param>
    /// <param name="obj">Output TNfeProc object</param>
    /// <param name="exception">output Exception value if deserialize failed</param>
    /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
    public static bool CanLoadFrom(System.IO.Stream source, ref CancelamentoCFe obj, ref Exception exception)
    {
        exception = null;
        obj = default;
        try
        {
            obj = LoadFrom(source);
            return true;
        }
        catch (Exception ex)
        {
            exception = ex;
            return false;
        }
    }

    public static bool CanLoadFrom(System.IO.Stream source, ref CancelamentoCFe obj)
    {
        Exception exception = null;
        return CanLoadFrom(source, ref obj, ref exception);
    }

    public static CancelamentoCFe LoadFrom(System.IO.Stream source)
    {
        if (source is null)
            throw new ArgumentException(Resources.Strings.Validation.Classes_Load_NullStreamExceptionMessage);
        System.IO.StreamReader sr = null;
        try
        {
            // file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
            sr = new System.IO.StreamReader(source);
            string xmlString = sr.ReadToEnd();
            // sr.Close()
            // file.Close()
            return Deserialize(xmlString);
        }
        finally
        {
            if (source != null)
            {
                source.Dispose();
            }

            if (sr != null)
            {
                sr.Dispose();
            }
        }
    }

    public static async Task<CancelamentoCFe> LoadFromAsync(System.IO.Stream source, bool close_stream = true)
    {
        if (source is null)
            throw new ArgumentException(Resources.Strings.Validation.Classes_Load_NullStreamExceptionMessage);
        System.IO.StreamReader sr = null;
        try
        {
            // file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
            sr = new System.IO.StreamReader(source);
            string xmlString = await sr.ReadToEndAsync();
            // sr.Close()
            // file.Close()
            return Deserialize(xmlString);
        }
        finally
        {
            if (sr != null & close_stream == true)
            {
                sr.Dispose();
            }
        }
    }

    /* TODO ERROR: Skipped EndRegionDirectiveTrivia */
}

[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class CFeCancelado : object, INotifyPropertyChanged
{
    private CFeCanceladoInformacoes infCFeField;
    private XElement anyField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public CFeCanceladoInformacoes infCFe
    {
        get
        {
            return infCFeField;
        }

        set
        {
            infCFeField = value;
            RaisePropertyChanged("infCFe");
        }
    }

    /// <remarks/>
    [XmlAnyElement(Namespace = "http://www.w3.org/2000/09/xmldsig#", Order = 1)]
    public XElement Any
    {
        get
        {
            return anyField;
        }

        set
        {
            anyField = value;
            RaisePropertyChanged("Any");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class CFeCanceladoInformacoes : object, INotifyPropertyChanged
{
    private string dEmiField;
    private string hEmiField;
    private IdentificacaoCFe ideField;
    private Emitente emitField;
    private Destinatario destField;
    private CFeCanceladoTotais totalField;
    private InformacoesAdicionaisObsFiscal[] infAdicField;
    private string versaoField;
    private string idField;
    private string chCancField;

    [XmlElement(Order = 0)]
    public string dEmi
    {
        get
        {
            return dEmiField;
        }

        set
        {
            dEmiField = value;
            RaisePropertyChanged("dEmi");
        }
    }

    [XmlElement(Order = 1)]
    public string hEmi
    {
        get
        {
            return hEmiField;
        }

        set
        {
            hEmiField = value;
            RaisePropertyChanged("hEmi");
        }
    }

    [XmlIgnore()]
    public DateTime? Emissao
    {
        get
        {
            if (string.IsNullOrEmpty(dEmi) | string.IsNullOrWhiteSpace(dEmi))
                return default;
            int d, m, y;
            d = Conversions.ToInteger(dEmi.Substring(6, 2));
            m = Conversions.ToInteger(dEmi.Substring(4, 2));
            y = Conversions.ToInteger(dEmi.Substring(0, 4));
            if (string.IsNullOrEmpty(hEmi) | string.IsNullOrEmpty(hEmi))
                return new DateTime(y, m, d);
            int h, MM, s;
            h = Conversions.ToInteger(hEmi.Substring(0, 2));
            MM = Conversions.ToInteger(hEmi.Substring(2, 2));
            s = Conversions.ToInteger(hEmi.Substring(4, 2));
            return new DateTime(y, m, d, h, MM, s);
        }
    }

    [XmlElement(Order = 2)]
    public IdentificacaoCFe ide
    {
        get
        {
            return ideField;
        }

        set
        {
            ideField = value;
            RaisePropertyChanged("ide");
        }
    }

    [XmlElement(Order = 3)]
    public Emitente emit
    {
        get
        {
            return emitField;
        }

        set
        {
            emitField = value;
            RaisePropertyChanged("emit");
        }
    }

    [XmlElement(Order = 4)]
    public Destinatario dest
    {
        get
        {
            return destField;
        }

        set
        {
            destField = value;
            RaisePropertyChanged("dest");
        }
    }

    [XmlElement(Order = 5)]
    public CFeCanceladoTotais total
    {
        get
        {
            return totalField;
        }

        set
        {
            totalField = value;
            RaisePropertyChanged("total");
        }
    }

    [XmlArray(Order = 6)]
    [XmlArrayItem("obsFisco", IsNullable = false)]
    public InformacoesAdicionaisObsFiscal[] infAdic
    {
        get
        {
            return infAdicField;
        }

        set
        {
            infAdicField = value;
            RaisePropertyChanged("infAdic");
        }
    }

    [XmlAttribute()]
    public string versao
    {
        get
        {
            return versaoField;
        }

        set
        {
            versaoField = value;
            RaisePropertyChanged("versao");
        }
    }

    [XmlAttribute()]
    public string Id
    {
        get
        {
            return idField;
        }

        set
        {
            idField = value;
            RaisePropertyChanged("Id");
        }
    }

    [XmlAttribute()]
    public string chCanc
    {
        get
        {
            return chCancField;
        }

        set
        {
            chCancField = value;
            RaisePropertyChanged("chCanc");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class CFeCanceladoTotais : object, INotifyPropertyChanged
{
    private string vCFeField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public string vCFe
    {
        get
        {
            return vCFeField;
        }

        set
        {
            vCFeField = value;
            RaisePropertyChanged("vCFe");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/* TODO ERROR: Skipped EndRegionDirectiveTrivia */
/// <summary>
/// Classe Principal do CF-e
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType("CFe", AnonymousType = true)]
public partial class CFe : object, INotifyPropertyChanged, IXmlSpedDocument
{
    private CFeInformacoes infCFeField;
    private XElement anyField;
    private static XmlSerializer sSerializer;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public CFeInformacoes infCFe
    {
        get
        {
            return infCFeField;
        }

        set
        {
            infCFeField = value;
            RaisePropertyChanged("infCFe");
        }
    }

    /// <remarks/>
    [XmlAnyElement(Namespace = "http://www.w3.org/2000/09/xmldsig#", Order = 1)]
    public XElement Any
    {
        get
        {
            return anyField;
        }

        set
        {
            anyField = value;
            RaisePropertyChanged("Any");
        }
    }

    public XmlDocumentType DocumentType
    {
        get
        {
            return XmlDocumentType.SAT_CFe;
        }
    }

    public DateTime? DataEmissao
    {
        get
        {
            return infCFe.ide.Emissao;
        }
    }

    public string Chave
    {
        get
        {
            if (string.IsNullOrEmpty(infCFe.Id))
                return null;
            return infCFe.Id.ToLower().Replace("cfe", "");
        }
    }

    private static XmlSerializer Serializer
    {
        get
        {
            if (sSerializer is null)
            {
                sSerializer = new XmlSerializer(typeof(CFe));
            }

            return sSerializer;
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /* TODO ERROR: Skipped RegionDirectiveTrivia */
    /// <summary>
    /// Serializes current TNfeProc object into an XML document
    /// </summary>
    /// <returns>string XML value</returns>
    public virtual string Serialize()
    {
        System.IO.StreamReader streamReader = null;
        System.IO.MemoryStream memoryStream = null;
        try
        {
            memoryStream = new System.IO.MemoryStream();
            Serializer.Serialize(memoryStream, this);
            memoryStream.Seek(0L, System.IO.SeekOrigin.Begin);
            streamReader = new System.IO.StreamReader(memoryStream);
            return streamReader.ReadToEnd();
        }
        finally
        {
            if (streamReader != null)
            {
                streamReader.Dispose();
            }

            if (memoryStream != null)
            {
                memoryStream.Dispose();
            }
        }
    }

    /// <summary>
    /// Deserializes workflow markup into an TNfeProc object
    /// </summary>
    /// <param name="xml">string workflow markup to deserialize</param>
    /// <param name="obj">Output TNfeProc object</param>
    /// <param name="exception">output Exception value if deserialize failed</param>
    /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
    public static bool CanDeserialize(string xml, ref CFe obj, ref Exception exception)
    {
        exception = null;
        obj = default;
        try
        {
            obj = Deserialize(xml);
            return true;
        }
        catch (Exception ex)
        {
            exception = ex;
            return false;
        }
    }

    public static bool CanDeserialize(string xml, ref CFe obj)
    {
        Exception exception = null;
        return CanDeserialize(xml, ref obj, ref exception);
    }

    public static CFe Deserialize(string xml)
    {
        System.IO.StringReader stringReader = null;
        try
        {
            string result = xml.Replace("ns1:", string.Empty).Replace("ns2:", string.Empty).Replace("ns3:", string.Empty).Replace("ns4:", string.Empty).Replace(":ns1", string.Empty).Replace(":ns2", string.Empty).Replace(":ns3", string.Empty).Replace(":ns4", string.Empty).Replace("xmlns=\"http://www.w3.org/2000/09/xmldsig#\"", string.Empty);
            stringReader = new System.IO.StringReader(result);
            // stringReader.ReadToEnd() 'TESTING...
            return (CFe)Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader));
        }
        // Return CType(Serializer.Deserialize(stringReader), CFe)
        finally
        {
            if (stringReader != null)
            {
                stringReader.Dispose();
            }
        }
    }

    public static CFe Deserialize(System.IO.Stream s)
    {
        return (CFe)Serializer.Deserialize(s);
    }


    /// <summary>
    /// Serializes current TNfeProc object into file
    /// </summary>
    /// <param name="target">target stream of outupt xml file</param>
    /// <param name="exception">output Exception value if failed</param>
    /// <returns>true if can serialize and save into file; otherwise, false</returns>
    public virtual bool CanSaveToFile(System.IO.Stream target, ref Exception exception)
    {
        exception = null;
        try
        {
            SaveTo(target);
            return true;
        }
        catch (Exception e)
        {
            exception = e;
            return false;
        }
    }

    public virtual void SaveTo(System.IO.Stream target)
    {
        if (target is null)
            throw new ArgumentException(Resources.Strings.Validation.Classes_Save_NullStreamExceptionMessage);
        var streamWriter = new System.IO.StreamWriter(target);
        try
        {
            string xmlString = Serialize();
            // Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
            // streamWriter = xmlFile.CreateText
            streamWriter.WriteLine(xmlString);
            streamWriter.Flush();
        }
        finally
        {
            if (streamWriter != null)
            {
                streamWriter.Dispose();
            }
        }
    }

    public virtual async void SaveToAsync(System.IO.Stream target)
    {
        if (target is null)
            throw new ArgumentException(Resources.Strings.Validation.Classes_Save_NullStreamExceptionMessage);
        var streamWriter = new System.IO.StreamWriter(target);
        try
        {
            string xmlString = Serialize();
            await streamWriter.WriteLineAsync(xmlString);
            await streamWriter.FlushAsync();
        }
        finally
        {
            if (streamWriter != null)
            {
                streamWriter.Dispose();
            }
        }
    }


    /// <summary>
    /// Deserializes xml markup from file into an TNfeProc object
    /// </summary>
    /// <param name="source">target stream of outupt xml file</param>
    /// <param name="obj">Output TNfeProc object</param>
    /// <param name="exception">output Exception value if deserialize failed</param>
    /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
    public static bool CanLoadFrom(System.IO.Stream source, ref CFe obj, ref Exception exception)
    {
        exception = null;
        obj = default;
        try
        {
            obj = LoadFrom(source);
            return true;
        }
        catch (Exception ex)
        {
            exception = ex;
            return false;
        }
    }

    public static bool CanLoadFrom(System.IO.Stream source, ref CFe obj)
    {
        Exception exception = null;
        return CanLoadFrom(source, ref obj, ref exception);
    }

    public static CFe LoadFrom(System.IO.Stream source)
    {
        if (source is null)
            throw new ArgumentException(Resources.Strings.Validation.Classes_Load_NullStreamExceptionMessage);
        System.IO.StreamReader sr = null;
        try
        {
            // file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
            sr = new System.IO.StreamReader(source);
            string xmlString = sr.ReadToEnd();
            // sr.Close()
            // file.Close()
            return Deserialize(xmlString);
        }
        finally
        {
            if (source != null)
            {
                source.Dispose();
            }

            if (sr != null)
            {
                sr.Dispose();
            }
        }
    }

    public static async Task<CFe> LoadFromAsync(System.IO.Stream source, bool close_stream = true)
    {
        if (source is null)
            throw new ArgumentException(Resources.Strings.Validation.Classes_Load_NullStreamExceptionMessage);
        System.IO.StreamReader sr = null;
        try
        {
            // file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
            sr = new System.IO.StreamReader(source);
            string xmlString = await sr.ReadToEndAsync();
            // sr.Close()
            // file.Close()
            return Deserialize(xmlString);
        }
        finally
        {
            if (sr != null & close_stream == true)
            {
                sr.Dispose();
            }
        }
    }

    /* TODO ERROR: Skipped EndRegionDirectiveTrivia */
}

[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class CFeInformacoes : object, INotifyPropertyChanged
{
    private IdentificacaoCFe ideField;
    private Emitente emitField;
    private Destinatario destField;
    private EnderecoEntrega entregaField;
    private Items[] detField;
    private envCFeCFeInfCFeTotal totalField;
    private envCFeCFeInfCFePgto pgtoField;
    private envCFeCFeInfCFeInfAdic infAdicField;
    private InformacoesAdicionaisObsFiscal[] obsFiscoField;
    private string versaoField;
    private string versaoDadosEntField;
    private string versaoSBField;
    private string idField;

    [XmlElement(Order = 0)]
    public IdentificacaoCFe ide
    {
        get
        {
            return ideField;
        }

        set
        {
            ideField = value;
            RaisePropertyChanged("ide");
        }
    }

    [XmlElement(Order = 1)]
    public Emitente emit
    {
        get
        {
            return emitField;
        }

        set
        {
            emitField = value;
            RaisePropertyChanged("emit");
        }
    }

    [XmlElement(Order = 2)]
    public Destinatario dest
    {
        get
        {
            return destField;
        }

        set
        {
            destField = value;
            RaisePropertyChanged("dest");
        }
    }

    [XmlElement(Order = 3)]
    public EnderecoEntrega entrega
    {
        get
        {
            return entregaField;
        }

        set
        {
            entregaField = value;
            RaisePropertyChanged("entrega");
        }
    }

    [XmlElement("det", Order = 4)]
    public Items[] Items
    {
        get
        {
            return detField;
        }

        set
        {
            detField = value;
            RaisePropertyChanged("Items");
        }
    }

    [XmlElement(Order = 5)]
    public envCFeCFeInfCFeTotal total
    {
        get
        {
            return totalField;
        }

        set
        {
            totalField = value;
            RaisePropertyChanged("total");
        }
    }

    [XmlElement(Order = 6)]
    public envCFeCFeInfCFePgto pgto
    {
        get
        {
            return pgtoField;
        }

        set
        {
            pgtoField = value;
            RaisePropertyChanged("pgto");
        }
    }

    [XmlElement(Order = 7)]
    public envCFeCFeInfCFeInfAdic infAdic
    {
        get
        {
            return infAdicField;
        }

        set
        {
            infAdicField = value;
            RaisePropertyChanged("infAdic");
        }
    }

    [XmlElement("obsFisco", Order = 8)]
    public InformacoesAdicionaisObsFiscal[] obsFisco
    {
        get
        {
            return obsFiscoField;
        }

        set
        {
            obsFiscoField = value;
            RaisePropertyChanged("obsFisco");
        }
    }

    [XmlAttribute()]
    public string versao
    {
        get
        {
            return versaoField;
        }

        set
        {
            versaoField = value;
            RaisePropertyChanged("versao");
        }
    }

    [XmlAttribute()]
    public string versaoDadosEnt
    {
        get
        {
            return versaoDadosEntField;
        }

        set
        {
            versaoDadosEntField = value;
            RaisePropertyChanged("versaoDadosEnt");
        }
    }

    [XmlAttribute()]
    public string versaoSB
    {
        get
        {
            return versaoSBField;
        }

        set
        {
            versaoSBField = value;
            RaisePropertyChanged("versaoSB");
        }
    }

    [XmlAttribute()]
    public string Id
    {
        get
        {
            return idField;
        }

        set
        {
            idField = value;
            RaisePropertyChanged("Id");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class IdentificacaoCFe : object, INotifyPropertyChanged
{
    private string cUFField;
    private string cNFField;
    private string modField;
    private string nserieSATField;
    private string nCFeField;
    private string dEmiField;
    private string hEmiField;
    private string cDVField;
    private Ambiente tpAmbField = Ambiente.Producao;
    private string cNPJField;
    private string signACField;
    private string assinaturaQRCODEField;
    private string numeroCaixaField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public string cUF
    {
        get
        {
            return cUFField;
        }

        set
        {
            cUFField = value;
            RaisePropertyChanged("cUF");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    public string cNF
    {
        get
        {
            return cNFField;
        }

        set
        {
            cNFField = value;
            RaisePropertyChanged("cNF");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 2)]
    public string mod
    {
        get
        {
            return modField;
        }

        set
        {
            modField = value;
            RaisePropertyChanged("mod");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 3)]
    public string nserieSAT
    {
        get
        {
            return nserieSATField;
        }

        set
        {
            nserieSATField = value;
            RaisePropertyChanged("nserieSAT");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 4)]
    public string nCFe
    {
        get
        {
            return nCFeField;
        }

        set
        {
            nCFeField = value;
            RaisePropertyChanged("nCFe");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 5)]
    public string dEmi
    {
        get
        {
            return dEmiField;
        }

        set
        {
            dEmiField = value;
            RaisePropertyChanged("dEmi");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 6)]
    public string hEmi
    {
        get
        {
            return hEmiField;
        }

        set
        {
            hEmiField = value;
            RaisePropertyChanged("hEmi");
        }
    }

    [XmlIgnore()]
    public DateTime? Emissao
    {
        get
        {
            if (string.IsNullOrEmpty(dEmi) | string.IsNullOrWhiteSpace(dEmi))
                return default;
            int d, m, y;
            d = Conversions.ToInteger(dEmi.Substring(6, 2));
            m = Conversions.ToInteger(dEmi.Substring(4, 2));
            y = Conversions.ToInteger(dEmi.Substring(0, 4));
            if (string.IsNullOrEmpty(hEmi) | string.IsNullOrEmpty(hEmi))
                return new DateTime(y, m, d);
            int h, MM, s;
            h = Conversions.ToInteger(hEmi.Substring(0, 2));
            MM = Conversions.ToInteger(hEmi.Substring(2, 2));
            s = Conversions.ToInteger(hEmi.Substring(4, 2));
            return new DateTime(y, m, d, h, MM, s);
        }
    }

    /// <remarks/>
    [XmlElement(Order = 7)]
    public string cDV
    {
        get
        {
            return cDVField;
        }

        set
        {
            cDVField = value;
            RaisePropertyChanged("cDV");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 8)]
    public Ambiente tpAmb
    {
        get
        {
            return tpAmbField;
        }

        set
        {
            tpAmbField = value;
            RaisePropertyChanged("tpAmb");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 9)]
    public string CNPJ
    {
        get
        {
            return cNPJField;
        }

        set
        {
            cNPJField = value;
            RaisePropertyChanged("CNPJ");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 10)]
    public string signAC
    {
        get
        {
            return signACField;
        }

        set
        {
            signACField = value;
            RaisePropertyChanged("signAC");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 11)]
    public string assinaturaQRCODE
    {
        get
        {
            return assinaturaQRCODEField;
        }

        set
        {
            assinaturaQRCODEField = value;
            RaisePropertyChanged("assinaturaQRCODE");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 12)]
    public string numeroCaixa
    {
        get
        {
            return numeroCaixaField;
        }

        set
        {
            numeroCaixaField = value;
            RaisePropertyChanged("numeroCaixa");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class EnderecoEmitente : object, INotifyPropertyChanged
{
    private string xLgrField;
    private string nroField;
    private string xCplField;
    private string xBairroField;
    private string xMunField;
    private string cEPField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public string xLgr
    {
        get
        {
            return xLgrField;
        }

        set
        {
            xLgrField = value;
            RaisePropertyChanged("xLgr");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    public string nro
    {
        get
        {
            return nroField;
        }

        set
        {
            nroField = value;
            RaisePropertyChanged("nro");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 2)]
    public string xCpl
    {
        get
        {
            return xCplField;
        }

        set
        {
            xCplField = value;
            RaisePropertyChanged("xCpl");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 3)]
    public string xBairro
    {
        get
        {
            return xBairroField;
        }

        set
        {
            xBairroField = value;
            RaisePropertyChanged("xBairro");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 4)]
    public string xMun
    {
        get
        {
            return xMunField;
        }

        set
        {
            xMunField = value;
            RaisePropertyChanged("xMun");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 5)]
    public string CEP
    {
        get
        {
            return cEPField;
        }

        set
        {
            cEPField = value;
            RaisePropertyChanged("CEP");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class EnderecoEntrega : object, INotifyPropertyChanged
{
    private string xLgrField;
    private string nroField;
    private string xCplField;
    private string xBairroField;
    private string xMunField;
    private string ufField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public string xLgr
    {
        get
        {
            return xLgrField;
        }

        set
        {
            xLgrField = value;
            RaisePropertyChanged("xLgr");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    public string nro
    {
        get
        {
            return nroField;
        }

        set
        {
            nroField = value;
            RaisePropertyChanged("nro");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 2)]
    public string xCpl
    {
        get
        {
            return xCplField;
        }

        set
        {
            xCplField = value;
            RaisePropertyChanged("xCpl");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 3)]
    public string xBairro
    {
        get
        {
            return xBairroField;
        }

        set
        {
            xBairroField = value;
            RaisePropertyChanged("xBairro");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 4)]
    public string xMun
    {
        get
        {
            return xMunField;
        }

        set
        {
            xMunField = value;
            RaisePropertyChanged("xMun");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 5)]
    public string UF
    {
        get
        {
            return ufField;
        }

        set
        {
            ufField = value;
            RaisePropertyChanged("UF");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class Items : object, INotifyPropertyChanged
{
    private Produto prodField;
    private Imposto impostoField;
    private string infAdProdField;
    private string nItemField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public Produto prod
    {
        get
        {
            return prodField;
        }

        set
        {
            prodField = value;
            RaisePropertyChanged("prod");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    public Imposto imposto
    {
        get
        {
            return impostoField;
        }

        set
        {
            impostoField = value;
            RaisePropertyChanged("imposto");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 2)]
    public string infAdProd
    {
        get
        {
            return infAdProdField;
        }

        set
        {
            infAdProdField = value;
            RaisePropertyChanged("infAdProd");
        }
    }

    /// <remarks/>
    [XmlAttribute()]
    public string nItem
    {
        get
        {
            return nItemField;
        }

        set
        {
            nItemField = value;
            RaisePropertyChanged("nItem");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class Produto : object, INotifyPropertyChanged
{
    private string cProdField;
    private string cEANField;
    private string xProdField;
    private string nCMField;
    private string cESTField;
    private string cFOPField;
    private string uComField;
    private string qComField;
    private string vUnComField;
    private string vProdField;
    private string indRegraField;
    private string vDescField;
    private string vOutroField;
    private string vItemField;
    private string vRatDescField;
    private string vRatAcrField;
    private ProdutoObsFisco[] obsFiscoDetField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public string cProd
    {
        get
        {
            return cProdField;
        }

        set
        {
            cProdField = value;
            RaisePropertyChanged("cProd");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    public string cEAN
    {
        get
        {
            return cEANField;
        }

        set
        {
            cEANField = value;
            RaisePropertyChanged("cEAN");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 2)]
    public string xProd
    {
        get
        {
            return xProdField;
        }

        set
        {
            xProdField = value;
            RaisePropertyChanged("xProd");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 3)]
    public string NCM
    {
        get
        {
            return nCMField;
        }

        set
        {
            nCMField = value;
            RaisePropertyChanged("NCM");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 4)]
    public string CEST
    {
        get
        {
            return cESTField;
        }

        set
        {
            cESTField = value;
            RaisePropertyChanged("CEST");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 5)]
    public string CFOP
    {
        get
        {
            return cFOPField;
        }

        set
        {
            cFOPField = value;
            RaisePropertyChanged("CFOP");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 6)]
    public string uCom
    {
        get
        {
            return uComField;
        }

        set
        {
            uComField = value;
            RaisePropertyChanged("uCom");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 7)]
    public string qCom
    {
        get
        {
            return qComField;
        }

        set
        {
            qComField = value;
            RaisePropertyChanged("qCom");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 8)]
    public string vUnCom
    {
        get
        {
            return vUnComField;
        }

        set
        {
            vUnComField = value;
            RaisePropertyChanged("vUnCom");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 9)]
    public string vProd
    {
        get
        {
            return vProdField;
        }

        set
        {
            vProdField = value;
            RaisePropertyChanged("vProd");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 10)]
    public string indRegra
    {
        get
        {
            return indRegraField;
        }

        set
        {
            indRegraField = value;
            RaisePropertyChanged("indRegra");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 11)]
    public string vDesc
    {
        get
        {
            return vDescField;
        }

        set
        {
            vDescField = value;
            RaisePropertyChanged("vDesc");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 12)]
    public string vOutro
    {
        get
        {
            return vOutroField;
        }

        set
        {
            vOutroField = value;
            RaisePropertyChanged("vOutro");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 13)]
    public string vItem
    {
        get
        {
            return vItemField;
        }

        set
        {
            vItemField = value;
            RaisePropertyChanged("vItem");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 14)]
    public string vRatDesc
    {
        get
        {
            return vRatDescField;
        }

        set
        {
            vRatDescField = value;
            RaisePropertyChanged("vRatDesc");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 15)]
    public string vRatAcr
    {
        get
        {
            return vRatAcrField;
        }

        set
        {
            vRatAcrField = value;
            RaisePropertyChanged("vRatAcr");
        }
    }

    /// <remarks/>
    [XmlElement("obsFiscoDet", Order = 16)]
    public ProdutoObsFisco[] obsFiscoDet
    {
        get
        {
            return obsFiscoDetField;
        }

        set
        {
            obsFiscoDetField = value;
            RaisePropertyChanged("obsFiscoDet");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class ProdutoObsFisco : object, INotifyPropertyChanged
{
    private string xTextoDetField;
    private string xCampoDetField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public string xTextoDet
    {
        get
        {
            return xTextoDetField;
        }

        set
        {
            xTextoDetField = value;
            RaisePropertyChanged("xTextoDet");
        }
    }

    /// <remarks/>
    [XmlAttribute()]
    public string xCampoDet
    {
        get
        {
            return xCampoDetField;
        }

        set
        {
            xCampoDetField = value;
            RaisePropertyChanged("xCampoDet");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <summary>
/// Tag Principal de acesso aos tributos do item
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class Imposto : object, INotifyPropertyChanged
{
    private string vItem12741Field;
    private object itemField;
    private ImpostoPIS pISField;
    private ImpostoPISST pISSTField;
    private ImpostoCOFINS cOFINSField;
    private ImpostoCOFINSST cOFINSSTField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public string vItem12741
    {
        get
        {
            return vItem12741Field;
        }

        set
        {
            vItem12741Field = value;
            RaisePropertyChanged("vItem12741");
        }
    }

    /// <remarks/>
    [XmlElement("ICMS", typeof(ImpostoICMS), Order = 1)]
    [XmlElement("ISSQN", typeof(ImpostoISSQN), Order = 1)]
    public object ICMS_ISSQN_generico
    {
        get
        {
            return itemField;
        }

        set
        {
            itemField = value;
            RaisePropertyChanged("ICMS_ISSQN");
        }
    }

    [XmlIgnore()]
    public ImpostoICMS ICMS
    {
        get
        {
            if (ICMS_ISSQN_generico is null)
                return null;
            if (ICMS_ISSQN_generico is ImpostoICMS)
                return (ImpostoICMS)ICMS_ISSQN_generico;
            return null;
        }
    }

    [XmlIgnore()]
    public ImpostoISSQN ISSQN
    {
        get
        {
            if (ICMS_ISSQN_generico is null)
                return null;
            if (ICMS_ISSQN_generico is ImpostoISSQN)
                return (ImpostoISSQN)ICMS_ISSQN_generico;
            return null;
        }
    }

    /// <remarks/>
    [XmlElement(Order = 2)]
    public ImpostoPIS PIS
    {
        get
        {
            return pISField;
        }

        set
        {
            pISField = value;
            RaisePropertyChanged("PIS");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 3)]
    public ImpostoPISST PISST
    {
        get
        {
            return pISSTField;
        }

        set
        {
            pISSTField = value;
            RaisePropertyChanged("PISST");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 4)]
    public ImpostoCOFINS COFINS
    {
        get
        {
            return cOFINSField;
        }

        set
        {
            cOFINSField = value;
            RaisePropertyChanged("COFINS");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 5)]
    public ImpostoCOFINSST COFINSST
    {
        get
        {
            return cOFINSSTField;
        }

        set
        {
            cOFINSSTField = value;
            RaisePropertyChanged("COFINSST");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <summary>
/// ICMS
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class ImpostoICMS : object, INotifyPropertyChanged
{
    private object itemField;
    private Tributacao_ICMS_Identifier itemElementNameField;

    /// <remarks/>
    [XmlElement("ICMS00", typeof(DetalhamentoICMS), Order = 0)]
    [XmlElement("ICMS40", typeof(DetalhamentoICMS), Order = 0)]
    [XmlElement("ICMSSN102", typeof(DetalhamentoICMS), Order = 0)]
    [XmlElement("ICMSSN900", typeof(DetalhamentoICMS), Order = 0)]
    [XmlChoiceIdentifier("TributacaoIndentifier")]
    public DetalhamentoICMS Tributacao
    {
        get
        {
            return (DetalhamentoICMS)itemField;
        }

        set
        {
            itemField = value;
            RaisePropertyChanged("Item");
        }
    }

    [XmlIgnore()]
    public Tributacao_ICMS_Identifier TributacaoIndentifier
    {
        get
        {
            return itemElementNameField;
        }

        set
        {
            if (itemElementNameField.Equals(value) != true)
            {
                itemElementNameField = value;
                RaisePropertyChanged("TributacaoIndentifier");
            }
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class DetalhamentoICMS : object, INotifyPropertyChanged
{

    /* TODO ERROR: Skipped RegionDirectiveTrivia */
    private string origField;
    private string cSTField;
    private string pICMSField;
    private string vICMSField;

    /* TODO ERROR: Skipped EndRegionDirectiveTrivia */
    /* TODO ERROR: Skipped RegionDirectiveTrivia */
    private string cSOSNField;

    /* TODO ERROR: Skipped EndRegionDirectiveTrivia */
    /* TODO ERROR: Skipped RegionDirectiveTrivia */
    [XmlElement()]
    public string Orig
    {
        get
        {
            return origField;
        }

        set
        {
            origField = value;
            RaisePropertyChanged("Orig");
        }
    }

    [XmlElement()]
    public string CST
    {
        get
        {
            return cSTField;
        }

        set
        {
            cSTField = value;
            RaisePropertyChanged("CST");
        }
    }

    public bool ShouldSerializeCST()
    {
        return CST == "00" | CST == "40";
    }

    [XmlElement()]
    public string pICMS
    {
        get
        {
            return pICMSField;
        }

        set
        {
            pICMSField = value;
            RaisePropertyChanged("pICMS");
        }
    }

    [XmlIgnore()]
    public double? pICMS_Double
    {
        get
        {
            double result = 0d;
            double.TryParse(pICMS, out result);
            return result;
        }
    }

    public bool ShouldSerializepICMS()
    {
        return CST == "00" | CSOSN == "900";
    }

    [XmlElement()]
    public string vICMS
    {
        get
        {
            return vICMSField;
        }

        set
        {
            vICMSField = value;
            RaisePropertyChanged("vICMS");
        }
    }

    [XmlIgnore()]
    public double? vICMS_Double
    {
        get
        {
            double result = 0d;
            double.TryParse(vICMS, out result);
            return result;
        }
    }

    public bool ShouldSerializevICMS()
    {
        return CST == "00" | CSOSN == "900";
    }

    /* TODO ERROR: Skipped EndRegionDirectiveTrivia */
    /* TODO ERROR: Skipped RegionDirectiveTrivia */
    [XmlElement()]
    public string CSOSN
    {
        get
        {
            return cSOSNField;
        }

        set
        {
            cSOSNField = value;
            RaisePropertyChanged("CSOSN");
        }
    }

    public bool ShouldSerializeCSOSN()
    {
        return CSOSN == "102" | CSOSN == "900";
    }

    /* TODO ERROR: Skipped EndRegionDirectiveTrivia */
    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <summary>
/// ISSQN
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class ImpostoISSQN : object, INotifyPropertyChanged
{
    private string vDeducISSQNField;
    private string vBCField;
    private string vAliqField;
    private string vISSQNField;
    private string cMunFGField;
    private string cListServField;
    private string cServTribMunField;
    private string cNatOpField;
    private string indIncFiscField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public string vDeducISSQN
    {
        get
        {
            return vDeducISSQNField;
        }

        set
        {
            vDeducISSQNField = value;
            RaisePropertyChanged("vDeducISSQN");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    public string vBC
    {
        get
        {
            return vBCField;
        }

        set
        {
            vBCField = value;
            RaisePropertyChanged("vBC");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 2)]
    public string vAliq
    {
        get
        {
            return vAliqField;
        }

        set
        {
            vAliqField = value;
            RaisePropertyChanged("vAliq");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 3)]
    public string vISSQN
    {
        get
        {
            return vISSQNField;
        }

        set
        {
            vISSQNField = value;
            RaisePropertyChanged("vISSQN");
        }
    }

    [XmlIgnore()]
    public double? vISSQN_Double
    {
        get
        {
            double result = 0d;
            double.TryParse(vISSQN, out result);
            return result;
        }
    }

    /// <remarks/>
    [XmlElement(Order = 4)]
    public string cMunFG
    {
        get
        {
            return cMunFGField;
        }

        set
        {
            cMunFGField = value;
            RaisePropertyChanged("cMunFG");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 5)]
    public string cListServ
    {
        get
        {
            return cListServField;
        }

        set
        {
            cListServField = value;
            RaisePropertyChanged("cListServ");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 6)]
    public string cServTribMun
    {
        get
        {
            return cServTribMunField;
        }

        set
        {
            cServTribMunField = value;
            RaisePropertyChanged("cServTribMun");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 7)]
    public string cNatOp
    {
        get
        {
            return cNatOpField;
        }

        set
        {
            cNatOpField = value;
            RaisePropertyChanged("cNatOp");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 8)]
    public string indIncFisc
    {
        get
        {
            return indIncFiscField;
        }

        set
        {
            indIncFiscField = value;
            RaisePropertyChanged("indIncFisc");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <summary>
/// PIS
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class ImpostoPIS : object, INotifyPropertyChanged
{
    private object itemField;
    private Tributacao_PIS_Identifier itemElementNameField;

    /// <remarks/>
    [XmlElement("PISAliq", typeof(DetalhamentoPIS), Order = 0)]
    [XmlElement("PISNT", typeof(DetalhamentoPIS), Order = 0)]
    [XmlElement("PISOutr", typeof(DetalhamentoPIS), Order = 0)]
    [XmlElement("PISQtde", typeof(DetalhamentoPIS), Order = 0)]
    [XmlElement("PISSN", typeof(DetalhamentoPIS), Order = 0)]
    [XmlChoiceIdentifier("TributacaoIndentifier")]
    public DetalhamentoPIS Tributacao
    {
        get
        {
            return (DetalhamentoPIS)itemField;
        }

        set
        {
            itemField = value;
            RaisePropertyChanged("Item");
        }
    }

    [XmlIgnore()]
    public Tributacao_PIS_Identifier TributacaoIndentifier
    {
        get
        {
            return itemElementNameField;
        }

        set
        {
            if (itemElementNameField.Equals(value) != true)
            {
                itemElementNameField = value;
                RaisePropertyChanged("TributacaoIndentifier");
            }
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class DetalhamentoPIS : object, INotifyPropertyChanged
{

    /* TODO ERROR: Skipped RegionDirectiveTrivia */
    private string cSTField;
    private string vBCField;
    private string pPISField;
    private string vPISField;

    /* TODO ERROR: Skipped EndRegionDirectiveTrivia */
    /* TODO ERROR: Skipped RegionDirectiveTrivia */
    private string qBCProdField;
    private string vAliqProdField;

    /* TODO ERROR: Skipped EndRegionDirectiveTrivia */
    /* TODO ERROR: Skipped RegionDirectiveTrivia */
    [XmlElement()]
    public string CST
    {
        get
        {
            return cSTField;
        }

        set
        {
            cSTField = value;
            RaisePropertyChanged("CST");
        }
    }

    [XmlElement()]
    public string vBC
    {
        get
        {
            return vBCField;
        }

        set
        {
            vBCField = value;
            RaisePropertyChanged("vBC");
        }
    }

    [XmlElement()]
    public string pPIS
    {
        get
        {
            return pPISField;
        }

        set
        {
            pPISField = value;
            RaisePropertyChanged("pPIS");
        }
    }

    [XmlElement()]
    public string vPIS
    {
        get
        {
            return vPISField;
        }

        set
        {
            vPISField = value;
            RaisePropertyChanged("vPIS");
        }
    }

    [XmlIgnore()]
    public double? vPIS_Double
    {
        get
        {
            double result = 0d;
            double.TryParse(vPIS, out result);
            return result;
        }
    }

    /* TODO ERROR: Skipped EndRegionDirectiveTrivia */
    /* TODO ERROR: Skipped RegionDirectiveTrivia */
    [XmlElement()]
    public string qBCProd
    {
        get
        {
            return qBCProdField;
        }

        set
        {
            qBCProdField = value;
            RaisePropertyChanged("qBCProd");
        }
    }

    [XmlElement()]
    public string vAliqProd
    {
        get
        {
            return vAliqProdField;
        }

        set
        {
            vAliqProdField = value;
            RaisePropertyChanged("vAliqProd");
        }
    }

    /* TODO ERROR: Skipped EndRegionDirectiveTrivia */
    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <summary>
/// PIS ST
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class ImpostoPISST : object, INotifyPropertyChanged
{
    private string pPISField;
    private string qBCProdField;
    private string vAliqProdField;
    private string vBCField;
    private string vPISField;

    [XmlElement()]
    public string pPIS
    {
        get
        {
            return pPISField;
        }

        set
        {
            pPISField = value;
            RaisePropertyChanged("pPIS");
        }
    }

    [XmlElement()]
    public string qBCProd
    {
        get
        {
            return qBCProdField;
        }

        set
        {
            qBCProdField = value;
            RaisePropertyChanged("qBCProd");
        }
    }

    [XmlElement()]
    public string vAliqProd
    {
        get
        {
            return vAliqProdField;
        }

        set
        {
            vAliqProdField = value;
            RaisePropertyChanged("vAliqProd");
        }
    }

    [XmlElement()]
    public string vBC
    {
        get
        {
            return vBCField;
        }

        set
        {
            vBCField = value;
            RaisePropertyChanged("vBC");
        }
    }

    [XmlElement()]
    public string vPIS
    {
        get
        {
            return vPISField;
        }

        set
        {
            vPISField = value;
            RaisePropertyChanged("vPIS");
        }
    }

    [XmlIgnore()]
    public double? vPIS_Double
    {
        get
        {
            double result = 0d;
            double.TryParse(vPIS, out result);
            return result;
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <summary>
/// COFINS
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class ImpostoCOFINS : object, INotifyPropertyChanged
{
    private object itemField;
    private Tributacao_COFINS_Identifier itemElementNameField;

    /// <remarks/>
    [XmlElement("COFINSAliq", typeof(DetalhamentoCOFINS), Order = 0)]
    [XmlElement("COFINSNT", typeof(DetalhamentoCOFINS), Order = 0)]
    [XmlElement("COFINSOutr", typeof(DetalhamentoCOFINS), Order = 0)]
    [XmlElement("COFINSQtde", typeof(DetalhamentoCOFINS), Order = 0)]
    [XmlElement("COFINSSN", typeof(DetalhamentoCOFINS), Order = 0)]
    [XmlChoiceIdentifier("TributacaoIndentifier")]
    public DetalhamentoCOFINS Tributacao
    {
        get
        {
            return (DetalhamentoCOFINS)itemField;
        }

        set
        {
            itemField = value;
            RaisePropertyChanged("Item");
        }
    }

    [XmlIgnore()]
    public Tributacao_COFINS_Identifier TributacaoIndentifier
    {
        get
        {
            return itemElementNameField;
        }

        set
        {
            if (itemElementNameField.Equals(value) != true)
            {
                itemElementNameField = value;
                RaisePropertyChanged("TributacaoIndentifier");
            }
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class DetalhamentoCOFINS : object, INotifyPropertyChanged
{

    /* TODO ERROR: Skipped RegionDirectiveTrivia */
    private string cSTField;
    private string vBCField;
    private string pCOFINSField;
    private string vCOFINSField;

    /* TODO ERROR: Skipped EndRegionDirectiveTrivia */
    /* TODO ERROR: Skipped RegionDirectiveTrivia */
    private string qBCProdField;
    private string vAliqProdField;

    /* TODO ERROR: Skipped EndRegionDirectiveTrivia */
    /* TODO ERROR: Skipped RegionDirectiveTrivia */
    [XmlElement()]
    public string CST
    {
        get
        {
            return cSTField;
        }

        set
        {
            cSTField = value;
            RaisePropertyChanged("CST");
        }
    }

    [XmlElement()]
    public string vBC
    {
        get
        {
            return vBCField;
        }

        set
        {
            vBCField = value;
            RaisePropertyChanged("vBC");
        }
    }

    [XmlElement()]
    public string pCOFINS
    {
        get
        {
            return pCOFINSField;
        }

        set
        {
            pCOFINSField = value;
            RaisePropertyChanged("pCOFINS");
        }
    }

    public string vCOFINS
    {
        get
        {
            return vCOFINSField;
        }

        set
        {
            vCOFINSField = value;
            RaisePropertyChanged("vCOFINS");
        }
    }

    [XmlIgnore()]
    public double? vCOFINS_Double
    {
        get
        {
            double result = 0d;
            double.TryParse(vCOFINS, out result);
            return result;
        }
    }

    /* TODO ERROR: Skipped EndRegionDirectiveTrivia */
    /* TODO ERROR: Skipped RegionDirectiveTrivia */
    [XmlElement()]
    public string qBCProd
    {
        get
        {
            return qBCProdField;
        }

        set
        {
            qBCProdField = value;
            RaisePropertyChanged("qBCProd");
        }
    }

    [XmlElement()]
    public string vAliqProd
    {
        get
        {
            return vAliqProdField;
        }

        set
        {
            vAliqProdField = value;
            RaisePropertyChanged("vAliqProd");
        }
    }

    /* TODO ERROR: Skipped EndRegionDirectiveTrivia */
    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <summary>
/// COFINS ST
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class ImpostoCOFINSST : object, INotifyPropertyChanged
{
    private string pCOFINSField;
    private string qBCProdField;
    private string vAliqProdField;
    private string vBCField;
    private string vCOFINSField;

    [XmlElement()]
    public string pCOFINS
    {
        get
        {
            return pCOFINSField;
        }

        set
        {
            pCOFINSField = value;
            RaisePropertyChanged("pCOFINS");
        }
    }

    [XmlElement()]
    public string qBCProd
    {
        get
        {
            return qBCProdField;
        }

        set
        {
            qBCProdField = value;
            RaisePropertyChanged("qBCProd");
        }
    }

    [XmlElement()]
    public string vAliqProd
    {
        get
        {
            return vAliqProdField;
        }

        set
        {
            vAliqProdField = value;
            RaisePropertyChanged("vAliqProd");
        }
    }

    [XmlElement()]
    public string vBC
    {
        get
        {
            return vBCField;
        }

        set
        {
            vBCField = value;
            RaisePropertyChanged("vBC");
        }
    }

    [XmlElement()]
    public string vCOFINS
    {
        get
        {
            return vCOFINSField;
        }

        set
        {
            vCOFINSField = value;
            RaisePropertyChanged("vCOFINS");
        }
    }

    [XmlIgnore()]
    public double? vCOFINS_Double
    {
        get
        {
            double result = 0d;
            double.TryParse(vCOFINS, out result);
            return result;
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <summary>
/// Registros Finais
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class envCFeCFeInfCFeTotal : object, INotifyPropertyChanged
{
    private envCFeCFeInfCFeTotalICMSTot iCMSTotField;
    private string vCFeField;
    private envCFeCFeInfCFeTotalISSQNtot iSSQNtotField;
    private envCFeCFeInfCFeTotalDescAcrEntr descAcrEntrField;
    private string vCFeLei12741Field;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public envCFeCFeInfCFeTotalICMSTot ICMSTot
    {
        get
        {
            return iCMSTotField;
        }

        set
        {
            iCMSTotField = value;
            RaisePropertyChanged("ICMSTot");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    public string vCFe
    {
        get
        {
            return vCFeField;
        }

        set
        {
            vCFeField = value;
            RaisePropertyChanged("vCFe");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 2)]
    public envCFeCFeInfCFeTotalISSQNtot ISSQNtot
    {
        get
        {
            return iSSQNtotField;
        }

        set
        {
            iSSQNtotField = value;
            RaisePropertyChanged("ISSQNtot");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 3)]
    public envCFeCFeInfCFeTotalDescAcrEntr DescAcrEntr
    {
        get
        {
            return descAcrEntrField;
        }

        set
        {
            descAcrEntrField = value;
            RaisePropertyChanged("DescAcrEntr");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 4)]
    public string vCFeLei12741
    {
        get
        {
            return vCFeLei12741Field;
        }

        set
        {
            vCFeLei12741Field = value;
            RaisePropertyChanged("vCFeLei12741");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class envCFeCFeInfCFeTotalICMSTot : object, INotifyPropertyChanged
{
    private string vICMSField;
    private string vProdField;
    private string vDescField;
    private string vPISField;
    private string vCOFINSField;
    private string vPISSTField;
    private string vCOFINSSTField;
    private string vOutroField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public string vICMS
    {
        get
        {
            return vICMSField;
        }

        set
        {
            vICMSField = value;
            RaisePropertyChanged("vICMS");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    public string vProd
    {
        get
        {
            return vProdField;
        }

        set
        {
            vProdField = value;
            RaisePropertyChanged("vProd");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 2)]
    public string vDesc
    {
        get
        {
            return vDescField;
        }

        set
        {
            vDescField = value;
            RaisePropertyChanged("vDesc");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 3)]
    public string vPIS
    {
        get
        {
            return vPISField;
        }

        set
        {
            vPISField = value;
            RaisePropertyChanged("vPIS");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 4)]
    public string vCOFINS
    {
        get
        {
            return vCOFINSField;
        }

        set
        {
            vCOFINSField = value;
            RaisePropertyChanged("vCOFINS");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 5)]
    public string vPISST
    {
        get
        {
            return vPISSTField;
        }

        set
        {
            vPISSTField = value;
            RaisePropertyChanged("vPISST");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 6)]
    public string vCOFINSST
    {
        get
        {
            return vCOFINSSTField;
        }

        set
        {
            vCOFINSSTField = value;
            RaisePropertyChanged("vCOFINSST");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 7)]
    public string vOutro
    {
        get
        {
            return vOutroField;
        }

        set
        {
            vOutroField = value;
            RaisePropertyChanged("vOutro");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class envCFeCFeInfCFeTotalISSQNtot : object, INotifyPropertyChanged
{
    private string vBCField;
    private string vISSField;
    private string vPISField;
    private string vCOFINSField;
    private string vPISSTField;
    private string vCOFINSSTField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public string vBC
    {
        get
        {
            return vBCField;
        }

        set
        {
            vBCField = value;
            RaisePropertyChanged("vBC");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    public string vISS
    {
        get
        {
            return vISSField;
        }

        set
        {
            vISSField = value;
            RaisePropertyChanged("vISS");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 2)]
    public string vPIS
    {
        get
        {
            return vPISField;
        }

        set
        {
            vPISField = value;
            RaisePropertyChanged("vPIS");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 3)]
    public string vCOFINS
    {
        get
        {
            return vCOFINSField;
        }

        set
        {
            vCOFINSField = value;
            RaisePropertyChanged("vCOFINS");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 4)]
    public string vPISST
    {
        get
        {
            return vPISSTField;
        }

        set
        {
            vPISSTField = value;
            RaisePropertyChanged("vPISST");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 5)]
    public string vCOFINSST
    {
        get
        {
            return vCOFINSSTField;
        }

        set
        {
            vCOFINSSTField = value;
            RaisePropertyChanged("vCOFINSST");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class envCFeCFeInfCFeTotalDescAcrEntr : object, INotifyPropertyChanged
{
    private string itemField;
    private DescontoAcredimo itemElementNameField;

    /// <remarks/>
    [XmlElement("vAcresSubtot", typeof(string), Order = 0)]
    [XmlElement("vDescSubtot", typeof(string), Order = 0)]
    [XmlChoiceIdentifier("ItemElementName")]
    public string Item
    {
        get
        {
            return itemField;
        }

        set
        {
            itemField = value;
            RaisePropertyChanged("Item");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    [XmlIgnore()]
    public DescontoAcredimo ItemElementName
    {
        get
        {
            return itemElementNameField;
        }

        set
        {
            itemElementNameField = value;
            RaisePropertyChanged("ItemElementName");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class envCFeCFeInfCFePgto : object, INotifyPropertyChanged
{
    private envCFeCFeInfCFePgtoMP[] mpField;
    private string vTrocoField;

    /// <remarks/>
    [XmlElement("MP", Order = 0)]
    public envCFeCFeInfCFePgtoMP[] MP
    {
        get
        {
            return mpField;
        }

        set
        {
            mpField = value;
            RaisePropertyChanged("MP");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    public string vTroco
    {
        get
        {
            return vTrocoField;
        }

        set
        {
            vTrocoField = value;
            RaisePropertyChanged("vTroco");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class envCFeCFeInfCFePgtoMP : object, INotifyPropertyChanged
{
    private FormaPagto cMPField = FormaPagto.Outros;
    private string vMPField;
    private string cAdmCField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public FormaPagto cMP
    {
        get
        {
            return cMPField;
        }

        set
        {
            cMPField = value;
            RaisePropertyChanged("cMP");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    public string vMP
    {
        get
        {
            return vMPField;
        }

        set
        {
            vMPField = value;
            RaisePropertyChanged("vMP");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 2)]
    public string cAdmC
    {
        get
        {
            return cAdmCField;
        }

        set
        {
            cAdmCField = value;
            RaisePropertyChanged("cAdmC");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class envCFeCFeInfCFeInfAdic : object, INotifyPropertyChanged
{
    private string infCplField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public string infCpl
    {
        get
        {
            return infCplField;
        }

        set
        {
            infCplField = value;
            RaisePropertyChanged("infCpl");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class InformacoesAdicionaisObsFiscal : object, INotifyPropertyChanged
{
    private string xTextoField;
    private string xCampoField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public string xTexto
    {
        get
        {
            return xTextoField;
        }

        set
        {
            xTextoField = value;
            RaisePropertyChanged("xTexto");
        }
    }

    /// <remarks/>
    [XmlAttribute()]
    public string xCampo
    {
        get
        {
            return xCampoField;
        }

        set
        {
            xCampoField = value;
            RaisePropertyChanged("xCampo");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
[XmlRoot(Namespace = "", IsNullable = false)]
public partial class confReset : object, INotifyPropertyChanged
{
    private Ambiente tpAmbField;
    private string cUFField;
    private string nSegField;
    private string dhEnvioField;
    private string nserieSATField;
    private string versaoField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public Ambiente tpAmb
    {
        get
        {
            return tpAmbField;
        }

        set
        {
            tpAmbField = value;
            RaisePropertyChanged("tpAmb");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    public string cUF
    {
        get
        {
            return cUFField;
        }

        set
        {
            cUFField = value;
            RaisePropertyChanged("cUF");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 2)]
    public string nSeg
    {
        get
        {
            return nSegField;
        }

        set
        {
            nSegField = value;
            RaisePropertyChanged("nSeg");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 3)]
    public string dhEnvio
    {
        get
        {
            return dhEnvioField;
        }

        set
        {
            dhEnvioField = value;
            RaisePropertyChanged("dhEnvio");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 4)]
    public string nserieSAT
    {
        get
        {
            return nserieSATField;
        }

        set
        {
            nserieSATField = value;
            RaisePropertyChanged("nserieSAT");
        }
    }

    /// <remarks/>
    [XmlAttribute()]
    public string versao
    {
        get
        {
            return versaoField;
        }

        set
        {
            versaoField = value;
            RaisePropertyChanged("versao");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
[XmlRoot(Namespace = "", IsNullable = false)]
public partial class consReci : object, INotifyPropertyChanged
{
    private string tpAmbField;
    private string nRecField;
    private string cUFField;
    private string nSegField;
    private string dhEnvioField;
    private string nserieSATField;
    private string versaoField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public string tpAmb
    {
        get
        {
            return tpAmbField;
        }

        set
        {
            tpAmbField = value;
            RaisePropertyChanged("tpAmb");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    public string nRec
    {
        get
        {
            return nRecField;
        }

        set
        {
            nRecField = value;
            RaisePropertyChanged("nRec");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 2)]
    public string cUF
    {
        get
        {
            return cUFField;
        }

        set
        {
            cUFField = value;
            RaisePropertyChanged("cUF");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 3)]
    public string nSeg
    {
        get
        {
            return nSegField;
        }

        set
        {
            nSegField = value;
            RaisePropertyChanged("nSeg");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 4)]
    public string dhEnvio
    {
        get
        {
            return dhEnvioField;
        }

        set
        {
            dhEnvioField = value;
            RaisePropertyChanged("dhEnvio");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 5)]
    public string nserieSAT
    {
        get
        {
            return nserieSATField;
        }

        set
        {
            nserieSATField = value;
            RaisePropertyChanged("nserieSAT");
        }
    }

    /// <remarks/>
    [XmlAttribute()]
    public string versao
    {
        get
        {
            return versaoField;
        }

        set
        {
            versaoField = value;
            RaisePropertyChanged("versao");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
[XmlRoot(Namespace = "", IsNullable = false)]
public partial class endServ : object, INotifyPropertyChanged
{
    private string tpAmbField;
    private string cUFField;
    private string nSegField;
    private string dhEnvioField;
    private string nserieSATField;
    private string versaoField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public string tpAmb
    {
        get
        {
            return tpAmbField;
        }

        set
        {
            tpAmbField = value;
            RaisePropertyChanged("tpAmb");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    public string cUF
    {
        get
        {
            return cUFField;
        }

        set
        {
            cUFField = value;
            RaisePropertyChanged("cUF");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 2)]
    public string nSeg
    {
        get
        {
            return nSegField;
        }

        set
        {
            nSegField = value;
            RaisePropertyChanged("nSeg");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 3)]
    public string dhEnvio
    {
        get
        {
            return dhEnvioField;
        }

        set
        {
            dhEnvioField = value;
            RaisePropertyChanged("dhEnvio");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 4)]
    public string nserieSAT
    {
        get
        {
            return nserieSATField;
        }

        set
        {
            nserieSATField = value;
            RaisePropertyChanged("nserieSAT");
        }
    }

    /// <remarks/>
    [XmlAttribute()]
    public string versao
    {
        get
        {
            return versaoField;
        }

        set
        {
            versaoField = value;
            RaisePropertyChanged("versao");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class Emitente : object, INotifyPropertyChanged
{
    private string cNPJField;
    private string xNomeField;
    private string xFantField;
    private EmitenteEndereço enderEmitField;
    private string ieField;
    private string imField;
    private string cRegTribField;
    private string cRegTribISSQNField;
    private string indRatISSQNField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public string CNPJ
    {
        get
        {
            return cNPJField;
        }

        set
        {
            cNPJField = value;
            RaisePropertyChanged("CNPJ");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    public string xNome
    {
        get
        {
            return xNomeField;
        }

        set
        {
            xNomeField = value;
            RaisePropertyChanged("xNome");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 2)]
    public string xFant
    {
        get
        {
            return xFantField;
        }

        set
        {
            xFantField = value;
            RaisePropertyChanged("xFant");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 3)]
    public EmitenteEndereço enderEmit
    {
        get
        {
            return enderEmitField;
        }

        set
        {
            enderEmitField = value;
            RaisePropertyChanged("enderEmit");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 4)]
    public string IE
    {
        get
        {
            return ieField;
        }

        set
        {
            ieField = value;
            RaisePropertyChanged("IE");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 5)]
    public string IM
    {
        get
        {
            return imField;
        }

        set
        {
            imField = value;
            RaisePropertyChanged("IM");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 6)]
    public string cRegTrib
    {
        get
        {
            return cRegTribField;
        }

        set
        {
            cRegTribField = value;
            RaisePropertyChanged("cRegTrib");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 7)]
    public string cRegTribISSQN
    {
        get
        {
            return cRegTribISSQNField;
        }

        set
        {
            cRegTribISSQNField = value;
            RaisePropertyChanged("cRegTribISSQN");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 8)]
    public string indRatISSQN
    {
        get
        {
            return indRatISSQNField;
        }

        set
        {
            indRatISSQNField = value;
            RaisePropertyChanged("indRatISSQN");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class EmitenteEndereço : object, INotifyPropertyChanged
{
    private string xLgrField;
    private string nroField;
    private string xCplField;
    private string xBairroField;
    private string xMunField;
    private string cEPField;

    /// <remarks/>
    [XmlElement(Order = 0)]
    public string xLgr
    {
        get
        {
            return xLgrField;
        }

        set
        {
            xLgrField = value;
            RaisePropertyChanged("xLgr");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    public string nro
    {
        get
        {
            return nroField;
        }

        set
        {
            nroField = value;
            RaisePropertyChanged("nro");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 2)]
    public string xCpl
    {
        get
        {
            return xCplField;
        }

        set
        {
            xCplField = value;
            RaisePropertyChanged("xCpl");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 3)]
    public string xBairro
    {
        get
        {
            return xBairroField;
        }

        set
        {
            xBairroField = value;
            RaisePropertyChanged("xBairro");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 4)]
    public string xMun
    {
        get
        {
            return xMunField;
        }

        set
        {
            xMunField = value;
            RaisePropertyChanged("xMun");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 5)]
    public string CEP
    {
        get
        {
            return cEPField;
        }

        set
        {
            cEPField = value;
            RaisePropertyChanged("CEP");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
[Serializable()]
[DebuggerStepThrough()]
[DesignerCategory("code")]
[XmlType(AnonymousType = true)]
public partial class Destinatario : object, INotifyPropertyChanged
{
    private string itemField;
    private PersonalidadJuridica itemElementNameField;
    private string xNomeField;

    /// <remarks/>
    [XmlElement("CNPJ", typeof(string), Order = 0)]
    [XmlElement("CPF", typeof(string), Order = 0)]
    [XmlChoiceIdentifier("ItemElementName")]
    public string Item
    {
        get
        {
            return itemField;
        }

        set
        {
            itemField = value;
            RaisePropertyChanged("Item");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 1)]
    [XmlIgnore()]
    public PersonalidadJuridica ItemElementName
    {
        get
        {
            return itemElementNameField;
        }

        set
        {
            itemElementNameField = value;
            RaisePropertyChanged("ItemElementName");
        }
    }

    /// <remarks/>
    [XmlElement(Order = 2)]
    public string xNome
    {
        get
        {
            return xNomeField;
        }

        set
        {
            xNomeField = value;
            RaisePropertyChanged("xNome");
        }
    }

    public event PropertyChangedEventHandler PropertyChanged;

    protected void RaisePropertyChanged(string propertyName)
    {
        var propertyChanged = PropertyChanged;
        if (propertyChanged != null)
        {
            propertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
