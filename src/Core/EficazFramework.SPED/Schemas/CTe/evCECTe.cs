// ------------------------------------------------------------------------------
// <auto-generated>
// O código foi gerado por uma ferramenta.
// Versão de Tempo de Execução:4.0.30319.42000
// 
// As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
// o código for gerado novamente.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Diagnostics;
using EficazFramework.SPED.Utilities.XML;
// 
// This source code was auto-generated by xsd, Version=4.6.1055.0.
// 
namespace EficazFramework.SPED.Schemas.CTe
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
    [Serializable()]
    [DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true, Namespace = "http://www.portalfiscal.inf.br/cte")]
    [System.Xml.Serialization.XmlRoot("evCECTe", Namespace = "http://www.portalfiscal.inf.br/cte", IsNullable = false)]
    public partial class EventoConfEntregaCTe : object, System.ComponentModel.INotifyPropertyChanged, IXmlSpedDocument
    {
        private string descEventoField = "Comprovante de Entrega do CT-e";
        private string nProtField;
        private DateTime dhEntregaField;
        private string nDocField;
        private string xNomeField;
        private double? latitudeField;
        private double? longitudeField;
        private byte[] hashEntregaField;
        private DateTime dhHashEntregaField;
        private List<evCECTeInfEntrega> infEntregaField = new List<evCECTeInfEntrega>();

        /// <remarks/>
        public string descEvento
        {
            get
            {
                return descEventoField;
            }

            set
            {
                descEventoField = value;
                RaisePropertyChanged("descEvento");
            }
        }

        /// <remarks/>
        public string nProt
        {
            get
            {
                return nProtField;
            }

            set
            {
                nProtField = value;
                RaisePropertyChanged("nProt");
            }
        }

        /// <remarks/>
        public DateTime dhEntrega
        {
            get
            {
                return dhEntregaField;
            }

            set
            {
                dhEntregaField = value;
                RaisePropertyChanged("dhEntrega");
            }
        }

        /// <remarks/>
        public string nDoc
        {
            get
            {
                return nDocField;
            }

            set
            {
                nDocField = value;
                RaisePropertyChanged("nDoc");
            }
        }

        /// <remarks/>
        public string xNome
        {
            get
            {
                return xNomeField;
            }

            set
            {
                xNomeField = value;
                RaisePropertyChanged("xNome");
            }
        }

        /// <remarks/>
        public double? latitude
        {
            get
            {
                return latitudeField;
            }

            set
            {
                latitudeField = value;
                RaisePropertyChanged("latitude");
            }
        }

        public bool ShouldSerializelatitude()
        {
            return latitude.HasValue;
        }

        /// <remarks/>
        public double? longitude
        {
            get
            {
                return longitudeField;
            }

            set
            {
                longitudeField = value;
                RaisePropertyChanged("longitude");
            }
        }

        public bool ShouldSerializelongitude()
        {
            return longitude.HasValue;
        }


        /// <remarks/>
        [System.Xml.Serialization.XmlElement(DataType = "base64Binary")]
        public byte[] hashEntrega
        {
            get
            {
                return hashEntregaField;
            }

            set
            {
                hashEntregaField = value;
                RaisePropertyChanged("hashEntrega");
            }
        }

        /// <remarks/>
        public DateTime dhHashEntrega
        {
            get
            {
                return dhHashEntregaField;
            }

            set
            {
                dhHashEntregaField = value;
                RaisePropertyChanged("dhHashEntrega");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("infEntrega")]
        public List<evCECTeInfEntrega> infEntrega
        {
            get
            {
                return infEntregaField;
            }

            set
            {
                infEntregaField = value;
                RaisePropertyChanged("infEntrega");
            }
        }

        public XmlDocumentType DocumentType
        {
            get
            {
                return XmlDocumentType.CTeEvtConfirmacaoEntrega;
            }
        }

        public DateTime? DataEmissao
        {
            get
            {
                return dhEntrega;
            }
        }

        public string Chave
        {
            get
            {
                return nProt;
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged != null)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("xsd", "4.6.1055.0")]
    [Serializable()]
    [DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true, Namespace = "http://www.portalfiscal.inf.br/cte")]
    public partial class evCECTeInfEntrega : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string chNFeField;

        /// <remarks/>
        public string chNFe
        {
            get
            {
                return chNFeField;
            }

            set
            {
                chNFeField = value;
                RaisePropertyChanged("chNFe");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged != null)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
}